package com.example.springboot.thymeleafdemo.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.springboot.thymeleafdemo.entity.Employee;
import com.example.springboot.thymeleafdemo.service.EmployeeService;

@Controller
@RequestMapping("/employees")
public class ThymeleafController {
	
	public final static String SAVE_EMPLOYEE= "employess/save-employee";
	public final static String SHOW_EMPLOYEE_LIST= "list-employee";
	public final static String REDIRECT= "redirect:/";

	
	private EmployeeService employeeService;
	
	@Autowired
	ThymeleafController(EmployeeService employeeService) {
		this.employeeService = employeeService;
	}
	
	@GetMapping("/list")
	public String getEmployee(Model theModel) {
		
		theModel.addAttribute("employees", employeeService.getEmployeeList());
		
		return SHOW_EMPLOYEE_LIST;
	}
	
	@GetMapping("/showFormForAdd")
	public String addEmployee(Model theModel) {
		
		Employee employee = new Employee();
		
		theModel.addAttribute("theEmployee", employee);
		
		return SAVE_EMPLOYEE;
	}
	
	
	@GetMapping("/showFormForUpdate")
	public String updateEmployee(@RequestParam("employeeId") int id, Model theModel) {
		
		Employee employee = employeeService.getSingleEmployee(id);
		
		theModel.addAttribute("theEmployee", employee);
		
		return SAVE_EMPLOYEE;
	}
	
	@PostMapping("/save")
	public String saveEmployee(@ModelAttribute Employee theEmployee) {
		
		employeeService.saveEmployee(theEmployee);
		
		return REDIRECT + SHOW_EMPLOYEE_LIST;
	}
	
	@PostMapping("/update")
	public String updateEmploy(Model theModel) {
		
		Employee employee = employeeService.getSingleEmployee(0); 
		
		theModel.addAttribute("theEmployee", employee);
		
		return SAVE_EMPLOYEE;
	}
	
}


